title = "Reentrancy vulnerabilities (theft of ethers)"
verbose_name = "reentrancy-eth"
severity = "critical"
category = "antipattern"
weight = 80
description = """

Detection of the [reentrancy bug](https://github.com/trailofbits/not-so-smart-contracts/tree/master/reentrancy).
Do not report reentrancies that don't involve Ether (see `reentrancy-no-eth`)

<!--more-->

## Exploit Scenario

```solidity
function withdrawBalance(){
    // send userBalance[msg.sender] Ether to msg.sender
    // if msg.sender is a contract, it will call its fallback function
    if( ! (msg.sender.call.value(userBalance[msg.sender])() ) ){
        throw;
    }
    userBalance[msg.sender] = 0;
}
```

Bob uses the re-entrancy bug to call `withdrawBalance` two times, and withdraw more than its initial deposit to the contract.

## Recommendation
Apply the [`check-effects-interactions pattern`](http://solidity.readthedocs.io/en/v0.4.21/security-considerations.html#re-entrancy).

## Learn more
[reentrancy-eth](https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities) on Slither's wiki.
"""
