title = "Multiple calls in a loop"
severity = "minor"
category = "antipattern"
weight = 50
description = """
Calls inside a loop might lead to a denial-of-service attack.

<!--more-->

## Exploit Scenario

```solidity
contract CallsInLoop{

    address[] destinations;

    constructor(address[] newDestinations) public{
        destinations = newDestinations;
    }

    function bad() external{
        for (uint i=0; i < destinations.length; i++){
            destinations[i].transfer(i);
        }
    }

}
```
If one of the destinations has a fallback function that reverts, `bad` will always revert.

## Recommendation
Favor [pull over push](https://github.com/ethereum/wiki/wiki/Safety#favor-pull-over-push-for-external-calls) strategy for external calls.

## Learn more
[calls-loop](https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop) on Slither's wiki.
"""
