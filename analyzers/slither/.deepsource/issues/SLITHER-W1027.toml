title = "Signed storage integer array compiler bug"
verbose_name = "storage-array"
severity = "critical"
category = "antipattern"
weight = 80
description = """
`solc` versions `0.4.7`-`0.5.9` contain [a compiler bug](https://blog.ethereum.org/2019/06/25/solidity-storage-array-bugs)
leading to incorrect values in signed integer arrays.

<!--more-->

## Exploit Scenario

```solidity
contract A {
	int[3] ether_balances; // storage signed integer array
	function bad0() private {
		// ...
		ether_balances = [-1, -1, -1];
		// ...
	}
}
```
`bad0()` uses a (storage-allocated) signed integer array state variable to store the ether balances of three accounts.  
`-1` is supposed to indicate uninitialized values but the Solidity bug makes these as `1`, which could be exploited by the accounts.


## Recommendation
Use a compiler version >= `0.5.10`.

## Learn more
[storage-array](https://github.com/crytic/slither/wiki/Detector-Documentation#storage-signed-integer-array) on Slither's wiki.
"""
