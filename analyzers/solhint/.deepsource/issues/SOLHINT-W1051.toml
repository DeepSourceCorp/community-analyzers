title = "Possible reentrancy vulnerabilities. Avoid state changes after transfer"
verbose_name = "reentrancy"
severity = "major"
category = "security"
weight = 60
description = """
Possible reentrancy vulnerabilities. Avoid state changes after transfer.

<!--more-->

## Bad Practice
1. Vulnerable Contract 1
```solidity

      pragma solidity 0.4.4;


      contract A {

                mapping(address => uint) private shares;

                function b() external {
                    uint amount = shares[msg.sender];
                    bool a = msg.sender.send(amount);
                    if (a) { shares[msg.sender] = 0; }
                }

      }

```

2. Vulnerable Contract 2
```solidity

      pragma solidity 0.4.4;


      contract A {

                mapping(address => uint) private shares;

                function b() external {
                    uint amount = shares[msg.sender];
                    msg.sender.transfer(amount);
                    shares[msg.sender] = 0;
                }

      }

```

## Recommended
1. Invulnerable Contract 1
```solidity

      pragma solidity 0.4.4;


      contract A {

                mapping(address => uint) private shares;

                function b() external {
                    uint amount = shares[msg.sender];
                    shares[msg.sender] = 0;
                    msg.sender.transfer(amount);
                }

      }

```

2. Invulnerable Contract 2
```solidity

      pragma solidity 0.4.4;


      contract A {

                mapping(address => uint) private shares;

                function b() external {
                    uint amount = shares[msg.sender];
                    user.test(amount);
                    shares[msg.sender] = 0;
                }

      }

```

3. Invulnerable Contract 3
```solidity

      pragma solidity 0.4.4;


      contract A {

        function b() public {

                uint[] shares;
                uint amount = shares[msg.sender];
                msg.sender.transfer(amount);
                shares[msg.sender] = 0;

        }

      }

```

## Learn more
[reentrancy](https://github.com/protofire/solhint/blob/develop/docs/rules/security/reentrancy.md) on Solhint's documentation.
"""
